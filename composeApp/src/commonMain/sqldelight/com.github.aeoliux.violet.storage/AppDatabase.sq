import kotlin.Boolean;
import kotlin.String;
import kotlin.collections.List;
import com.github.aeoliux.violet.api.types.GradeType;

/**
CREATE TABLE Users (
    id INTEGER NOT NULL,
    firstName TEXT NOT NULL,
    lastName TEXT NOT NULL,
    isSchoolAdministrator INTEGER AS Boolean NOT NULL,
    isEmployee INTEGER AS Boolean NOT NULL
);

insertUser:
INSERT INTO Users VALUES (?, ?, ?, ?, ?);

selectUserById:
SELECT * FROM Users WHERE id = ? LIMIT 1;

clearUsers:
DELETE FROM Users;
*/

CREATE TABLE ClassInfo (
    number INTEGER NOT NULL,
    symbol TEXT NOT NULL,
    classTutors TEXT AS List<String> NOT NULL,
    semester INTEGER NOT NULL
);

insertClassInfo:
INSERT INTO ClassInfo VALUES (?, ?, ?, ?);

selectClassInfo:
SELECT * FROM ClassInfo LIMIT 1;

clearClassInfo:
DELETE FROM ClassInfo;

CREATE TABLE Grades (
    subject TEXT NOT NULL,
    grade TEXT NOT NULL,
    addDate TEXT NOT NULL,
    color TEXT NOT NULL,
    gradeType INTEGER AS GradeType NOT NULL,
    category TEXT NOT NULL,
    addedBy TEXT NOT NULL,
    weight INTEGER NOT NULL,
    semester INTEGER NOT NULL,
    comment TEXT
);

insertGrade:
INSERT INTO Grades VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectAllGrades:
SELECT * FROM Grades;

clearGrades:
DELETE FROM Grades;

CREATE TABLE Me (
    id INTEGER NOT NULL,
    firstName TEXT NOT NULL,
    lastName TEXT NOT NULL,
    email TEXT NOT NULL,
    login TEXT NOT NULL
);

insertAboutMe:
INSERT INTO Me VALUES (?, ?, ?, ?, ?);

selectAboutMe:
SELECT * FROM Me LIMIT 1;

clearAboutMe:
DELETE FROM Me;

CREATE TABLE LuckyNumber (
    number INTEGER NOT NULL,
    date TEXT NOT NULL
);

insertLuckyNumber:
INSERT INTO LuckyNumber VALUES (?, ?);

selectLuckyNumber:
SELECT * FROM LuckyNumber LIMIT 1;

clearLuckyNumber:
DELETE FROM LuckyNumber;

CREATE TABLE Lessons (
    date TEXT NOT NULL,
    time TEXT NOT NULL,
    lessonNo INTEGER NOT NULL,

    subject TEXT NOT NULL,
    teacher TEXT NOT NULL,
    classroom TEXT NOT NULL,
    isCanceled INTEGER AS Boolean NOT NULL,
    subclassName TEXT
);

insertLesson:
INSERT INTO Lessons VALUES (?, ?, ?, ?, ?, ?, ?, ?);

selectLessons:
SELECT * FROM Lessons;

clearLessons:
DELETE FROM Lessons;

CREATE TABLE Attendances(
    date TEXT NOT NULL,
    lessonNo INTEGER NOT NULL,

    addedBy TEXT NOT NULL,
    addDate TEXT NOT NULL,
    semester INTEGER NOT NULL,
    typeShort TEXT NOT NULL,
    type TEXT NOT NULL,
    color TEXT NOT NULL
);

insertAttendance:
INSERT INTO Attendances VALUES (?, ?, ?, ?, ?, ?, ?, ?);

selectAttendances:
SELECT * FROM Attendances;

clearAttendances:
DELETE FROM Attendances;

CREATE TABLE Agenda(
    date TEXT NOT NULL,
    lessonNo INTEGER NOT NULL,

    content TEXT NOT NULL,
    category TEXT NOT NULL,
    createdBy TEXT NOT NULL,
    addedAt TEXT NOT NULL,
    color TEXT NOT NULL,
    timeFrom TEXT NOT NULL,
    timeTo TEXT NOT NULL,
    subject TEXT,
    classroom TEXT
);

insertAgenda:
INSERT INTO Agenda VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectAgenda:
SELECT * FROM Agenda;

clearAgenda:
DELETE FROM Agenda;

CREATE TABLE SchoolNotices(
    id INTEGER PRIMARY KEY NOT NULL,
    startDate TEXT NOT NULL,
    endDate TEXT NOT NULL,
    subject TEXT NOT NULL,
    content TEXT NOT NULL,
    addedBy TEXT NOT NULL,
    createdAt TEXT NOT NULL
);

insertSchoolNotices:
INSERT INTO SchoolNotices (startDate, endDate, subject, content, addedBy, createdAt)
    VALUES (?, ?, ?, ?, ?, ?);

selectListOfSchoolNotices:
SELECT id, addedBy, subject, createdAt FROM SchoolNotices ORDER BY createdAt DESC;

selectSchoolNotice:
SELECT * FROM SchoolNotices WHERE id = ? LIMIT 1;

clearSchoolNotices:
DELETE FROM SchoolNotices;